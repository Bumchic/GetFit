#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GetFit.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GetFit")]
	public partial class dbGetFitDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertemail(email instance);
    partial void Updateemail(email instance);
    partial void Deleteemail(email instance);
    partial void Insertworkout(workout instance);
    partial void Updateworkout(workout instance);
    partial void Deleteworkout(workout instance);
    partial void Insertorderdetail(orderdetail instance);
    partial void Updateorderdetail(orderdetail instance);
    partial void Deleteorderdetail(orderdetail instance);
    partial void Insertorder(order instance);
    partial void Updateorder(order instance);
    partial void Deleteorder(order instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    partial void Insertworkoutplandetail(workoutplandetail instance);
    partial void Updateworkoutplandetail(workoutplandetail instance);
    partial void Deleteworkoutplandetail(workoutplandetail instance);
    partial void Insertworkoutplan(workoutplan instance);
    partial void Updateworkoutplan(workoutplan instance);
    partial void Deleteworkoutplan(workoutplan instance);
    #endregion
		
		public dbGetFitDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbGetFitDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbGetFitDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbGetFitDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<email> emails
		{
			get
			{
				return this.GetTable<email>();
			}
		}
		
		public System.Data.Linq.Table<workout> workouts
		{
			get
			{
				return this.GetTable<workout>();
			}
		}
		
		public System.Data.Linq.Table<orderdetail> orderdetails
		{
			get
			{
				return this.GetTable<orderdetail>();
			}
		}
		
		public System.Data.Linq.Table<order> orders
		{
			get
			{
				return this.GetTable<order>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		public System.Data.Linq.Table<workoutplandetail> workoutplandetails
		{
			get
			{
				return this.GetTable<workoutplandetail>();
			}
		}
		
		public System.Data.Linq.Table<workoutplan> workoutplans
		{
			get
			{
				return this.GetTable<workoutplan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.emails")]
	public partial class email : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _emailid;
		
		private System.Nullable<int> _userid;
		
		private string _emailtype;
		
		private System.Nullable<System.DateTime> _timesend;
		
		private string _status;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemailidChanging(int value);
    partial void OnemailidChanged();
    partial void OnuseridChanging(System.Nullable<int> value);
    partial void OnuseridChanged();
    partial void OnemailtypeChanging(string value);
    partial void OnemailtypeChanged();
    partial void OntimesendChanging(System.Nullable<System.DateTime> value);
    partial void OntimesendChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public email()
		{
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int emailid
		{
			get
			{
				return this._emailid;
			}
			set
			{
				if ((this._emailid != value))
				{
					this.OnemailidChanging(value);
					this.SendPropertyChanging();
					this._emailid = value;
					this.SendPropertyChanged("emailid");
					this.OnemailidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", DbType="Int")]
		public System.Nullable<int> userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailtype", DbType="NVarChar(100)")]
		public string emailtype
		{
			get
			{
				return this._emailtype;
			}
			set
			{
				if ((this._emailtype != value))
				{
					this.OnemailtypeChanging(value);
					this.SendPropertyChanging();
					this._emailtype = value;
					this.SendPropertyChanged("emailtype");
					this.OnemailtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timesend", DbType="DateTime")]
		public System.Nullable<System.DateTime> timesend
		{
			get
			{
				return this._timesend;
			}
			set
			{
				if ((this._timesend != value))
				{
					this.OntimesendChanging(value);
					this.SendPropertyChanging();
					this._timesend = value;
					this.SendPropertyChanged("timesend");
					this.OntimesendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(50)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_email", Storage="_user", ThisKey="userid", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.emails.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.emails.Add(this);
						this._userid = value.user_id;
					}
					else
					{
						this._userid = default(Nullable<int>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.workouts")]
	public partial class workout : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _workoutid;
		
		private string _name;
		
		private string _musclegroup;
		
		private string _videourl;
		
		private System.Nullable<int> _reps;
		
		private EntitySet<workoutplandetail> _workoutplandetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnworkoutidChanging(int value);
    partial void OnworkoutidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnmusclegroupChanging(string value);
    partial void OnmusclegroupChanged();
    partial void OnvideourlChanging(string value);
    partial void OnvideourlChanged();
    partial void OnrepsChanging(System.Nullable<int> value);
    partial void OnrepsChanged();
    #endregion
		
		public workout()
		{
			this._workoutplandetails = new EntitySet<workoutplandetail>(new Action<workoutplandetail>(this.attach_workoutplandetails), new Action<workoutplandetail>(this.detach_workoutplandetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workoutid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int workoutid
		{
			get
			{
				return this._workoutid;
			}
			set
			{
				if ((this._workoutid != value))
				{
					this.OnworkoutidChanging(value);
					this.SendPropertyChanging();
					this._workoutid = value;
					this.SendPropertyChanged("workoutid");
					this.OnworkoutidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_musclegroup", DbType="NVarChar(100)")]
		public string musclegroup
		{
			get
			{
				return this._musclegroup;
			}
			set
			{
				if ((this._musclegroup != value))
				{
					this.OnmusclegroupChanging(value);
					this.SendPropertyChanging();
					this._musclegroup = value;
					this.SendPropertyChanged("musclegroup");
					this.OnmusclegroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_videourl", DbType="NVarChar(500)")]
		public string videourl
		{
			get
			{
				return this._videourl;
			}
			set
			{
				if ((this._videourl != value))
				{
					this.OnvideourlChanging(value);
					this.SendPropertyChanging();
					this._videourl = value;
					this.SendPropertyChanged("videourl");
					this.OnvideourlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reps", DbType="Int")]
		public System.Nullable<int> reps
		{
			get
			{
				return this._reps;
			}
			set
			{
				if ((this._reps != value))
				{
					this.OnrepsChanging(value);
					this.SendPropertyChanging();
					this._reps = value;
					this.SendPropertyChanged("reps");
					this.OnrepsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="workout_workoutplandetail", Storage="_workoutplandetails", ThisKey="workoutid", OtherKey="workoutid")]
		public EntitySet<workoutplandetail> workoutplandetails
		{
			get
			{
				return this._workoutplandetails;
			}
			set
			{
				this._workoutplandetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_workoutplandetails(workoutplandetail entity)
		{
			this.SendPropertyChanging();
			entity.workout = this;
		}
		
		private void detach_workoutplandetails(workoutplandetail entity)
		{
			this.SendPropertyChanging();
			entity.workout = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.orderdetails")]
	public partial class orderdetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _orderid;
		
		private System.Nullable<int> _planid;
		
		private System.Nullable<int> _quantity;
		
		private System.Nullable<decimal> _price;
		
		private int _orderdetailid;
		
		private EntityRef<order> _order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnorderidChanging(System.Nullable<int> value);
    partial void OnorderidChanged();
    partial void OnplanidChanging(System.Nullable<int> value);
    partial void OnplanidChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    partial void OnorderdetailidChanging(int value);
    partial void OnorderdetailidChanged();
    #endregion
		
		public orderdetail()
		{
			this._order = default(EntityRef<order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderid", DbType="Int")]
		public System.Nullable<int> orderid
		{
			get
			{
				return this._orderid;
			}
			set
			{
				if ((this._orderid != value))
				{
					if (this._order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnorderidChanging(value);
					this.SendPropertyChanging();
					this._orderid = value;
					this.SendPropertyChanged("orderid");
					this.OnorderidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_planid", DbType="Int")]
		public System.Nullable<int> planid
		{
			get
			{
				return this._planid;
			}
			set
			{
				if ((this._planid != value))
				{
					this.OnplanidChanging(value);
					this.SendPropertyChanging();
					this._planid = value;
					this.SendPropertyChanged("planid");
					this.OnplanidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderdetailid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int orderdetailid
		{
			get
			{
				return this._orderdetailid;
			}
			set
			{
				if ((this._orderdetailid != value))
				{
					this.OnorderdetailidChanging(value);
					this.SendPropertyChanging();
					this._orderdetailid = value;
					this.SendPropertyChanged("orderdetailid");
					this.OnorderdetailidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_orderdetail", Storage="_order", ThisKey="orderid", OtherKey="orderid", IsForeignKey=true)]
		public order order
		{
			get
			{
				return this._order.Entity;
			}
			set
			{
				order previousValue = this._order.Entity;
				if (((previousValue != value) 
							|| (this._order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._order.Entity = null;
						previousValue.orderdetails.Remove(this);
					}
					this._order.Entity = value;
					if ((value != null))
					{
						value.orderdetails.Add(this);
						this._orderid = value.orderid;
					}
					else
					{
						this._orderid = default(Nullable<int>);
					}
					this.SendPropertyChanged("order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.orders")]
	public partial class order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _orderid;
		
		private System.Nullable<int> _user_id;
		
		private System.Nullable<System.DateTime> _orderdate;
		
		private System.Nullable<decimal> _totalamount;
		
		private string _status;
		
		private bool _ispayment;
		
		private bool _isship;
		
		private System.Nullable<System.DateTime> _delivery_date;
		
		private EntitySet<orderdetail> _orderdetails;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnorderidChanging(int value);
    partial void OnorderidChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    partial void OnorderdateChanging(System.Nullable<System.DateTime> value);
    partial void OnorderdateChanged();
    partial void OntotalamountChanging(System.Nullable<decimal> value);
    partial void OntotalamountChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnispaymentChanging(bool value);
    partial void OnispaymentChanged();
    partial void OnisshipChanging(bool value);
    partial void OnisshipChanged();
    partial void Ondelivery_dateChanging(System.Nullable<System.DateTime> value);
    partial void Ondelivery_dateChanged();
    #endregion
		
		public order()
		{
			this._orderdetails = new EntitySet<orderdetail>(new Action<orderdetail>(this.attach_orderdetails), new Action<orderdetail>(this.detach_orderdetails));
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int orderid
		{
			get
			{
				return this._orderid;
			}
			set
			{
				if ((this._orderid != value))
				{
					this.OnorderidChanging(value);
					this.SendPropertyChanging();
					this._orderid = value;
					this.SendPropertyChanged("orderid");
					this.OnorderidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> orderdate
		{
			get
			{
				return this._orderdate;
			}
			set
			{
				if ((this._orderdate != value))
				{
					this.OnorderdateChanging(value);
					this.SendPropertyChanging();
					this._orderdate = value;
					this.SendPropertyChanged("orderdate");
					this.OnorderdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalamount", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> totalamount
		{
			get
			{
				return this._totalamount;
			}
			set
			{
				if ((this._totalamount != value))
				{
					this.OntotalamountChanging(value);
					this.SendPropertyChanging();
					this._totalamount = value;
					this.SendPropertyChanged("totalamount");
					this.OntotalamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(50)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ispayment", DbType="Bit NOT NULL")]
		public bool ispayment
		{
			get
			{
				return this._ispayment;
			}
			set
			{
				if ((this._ispayment != value))
				{
					this.OnispaymentChanging(value);
					this.SendPropertyChanging();
					this._ispayment = value;
					this.SendPropertyChanged("ispayment");
					this.OnispaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isship", DbType="Bit NOT NULL")]
		public bool isship
		{
			get
			{
				return this._isship;
			}
			set
			{
				if ((this._isship != value))
				{
					this.OnisshipChanging(value);
					this.SendPropertyChanging();
					this._isship = value;
					this.SendPropertyChanged("isship");
					this.OnisshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_delivery_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> delivery_date
		{
			get
			{
				return this._delivery_date;
			}
			set
			{
				if ((this._delivery_date != value))
				{
					this.Ondelivery_dateChanging(value);
					this.SendPropertyChanging();
					this._delivery_date = value;
					this.SendPropertyChanged("delivery_date");
					this.Ondelivery_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_orderdetail", Storage="_orderdetails", ThisKey="orderid", OtherKey="orderid")]
		public EntitySet<orderdetail> orderdetails
		{
			get
			{
				return this._orderdetails;
			}
			set
			{
				this._orderdetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_order", Storage="_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.orders.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.orders.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_orderdetails(orderdetail entity)
		{
			this.SendPropertyChanging();
			entity.order = this;
		}
		
		private void detach_orderdetails(orderdetail entity)
		{
			this.SendPropertyChanging();
			entity.order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private string _user_fullname;
		
		private string _username;
		
		private string _password;
		
		private string _email;
		
		private string _phonenumber;
		
		private System.Nullable<System.DateTime> _user_dob;
		
		private System.Nullable<System.DateTime> _createdat;
		
		private string _Role;
		
		private EntitySet<email> _emails;
		
		private EntitySet<order> _orders;
		
		private EntitySet<workoutplan> _workoutplans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onuser_fullnameChanging(string value);
    partial void Onuser_fullnameChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphonenumberChanging(string value);
    partial void OnphonenumberChanged();
    partial void Onuser_dobChanging(System.Nullable<System.DateTime> value);
    partial void Onuser_dobChanged();
    partial void OncreatedatChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedatChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    #endregion
		
		public user()
		{
			this._emails = new EntitySet<email>(new Action<email>(this.attach_emails), new Action<email>(this.detach_emails));
			this._orders = new EntitySet<order>(new Action<order>(this.attach_orders), new Action<order>(this.detach_orders));
			this._workoutplans = new EntitySet<workoutplan>(new Action<workoutplan>(this.attach_workoutplans), new Action<workoutplan>(this.detach_workoutplans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_fullname", DbType="NVarChar(50)")]
		public string user_fullname
		{
			get
			{
				return this._user_fullname;
			}
			set
			{
				if ((this._user_fullname != value))
				{
					this.Onuser_fullnameChanging(value);
					this.SendPropertyChanging();
					this._user_fullname = value;
					this.SendPropertyChanged("user_fullname");
					this.Onuser_fullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(30)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(30)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phonenumber", DbType="VarChar(12)")]
		public string phonenumber
		{
			get
			{
				return this._phonenumber;
			}
			set
			{
				if ((this._phonenumber != value))
				{
					this.OnphonenumberChanging(value);
					this.SendPropertyChanging();
					this._phonenumber = value;
					this.SendPropertyChanged("phonenumber");
					this.OnphonenumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_dob", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> user_dob
		{
			get
			{
				return this._user_dob;
			}
			set
			{
				if ((this._user_dob != value))
				{
					this.Onuser_dobChanging(value);
					this.SendPropertyChanging();
					this._user_dob = value;
					this.SendPropertyChanged("user_dob");
					this.Onuser_dobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdat", DbType="DateTime")]
		public System.Nullable<System.DateTime> createdat
		{
			get
			{
				return this._createdat;
			}
			set
			{
				if ((this._createdat != value))
				{
					this.OncreatedatChanging(value);
					this.SendPropertyChanging();
					this._createdat = value;
					this.SendPropertyChanged("createdat");
					this.OncreatedatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_email", Storage="_emails", ThisKey="user_id", OtherKey="userid")]
		public EntitySet<email> emails
		{
			get
			{
				return this._emails;
			}
			set
			{
				this._emails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_order", Storage="_orders", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<order> orders
		{
			get
			{
				return this._orders;
			}
			set
			{
				this._orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_workoutplan", Storage="_workoutplans", ThisKey="user_id", OtherKey="userid")]
		public EntitySet<workoutplan> workoutplans
		{
			get
			{
				return this._workoutplans;
			}
			set
			{
				this._workoutplans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_emails(email entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_emails(email entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_workoutplans(workoutplan entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_workoutplans(workoutplan entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.workoutplandetails")]
	public partial class workoutplandetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _planid;
		
		private int _workoutid;
		
		private string _workoutday;
		
		private System.Nullable<int> _sets;
		
		private System.Nullable<int> _reps;
		
		private EntityRef<workout> _workout;
		
		private EntityRef<workoutplan> _workoutplan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnplanidChanging(int value);
    partial void OnplanidChanged();
    partial void OnworkoutidChanging(int value);
    partial void OnworkoutidChanged();
    partial void OnworkoutdayChanging(string value);
    partial void OnworkoutdayChanged();
    partial void OnsetsChanging(System.Nullable<int> value);
    partial void OnsetsChanged();
    partial void OnrepsChanging(System.Nullable<int> value);
    partial void OnrepsChanged();
    #endregion
		
		public workoutplandetail()
		{
			this._workout = default(EntityRef<workout>);
			this._workoutplan = default(EntityRef<workoutplan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_planid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int planid
		{
			get
			{
				return this._planid;
			}
			set
			{
				if ((this._planid != value))
				{
					if (this._workoutplan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnplanidChanging(value);
					this.SendPropertyChanging();
					this._planid = value;
					this.SendPropertyChanged("planid");
					this.OnplanidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workoutid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int workoutid
		{
			get
			{
				return this._workoutid;
			}
			set
			{
				if ((this._workoutid != value))
				{
					if (this._workout.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnworkoutidChanging(value);
					this.SendPropertyChanging();
					this._workoutid = value;
					this.SendPropertyChanged("workoutid");
					this.OnworkoutidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workoutday", DbType="NVarChar(20)")]
		public string workoutday
		{
			get
			{
				return this._workoutday;
			}
			set
			{
				if ((this._workoutday != value))
				{
					this.OnworkoutdayChanging(value);
					this.SendPropertyChanging();
					this._workoutday = value;
					this.SendPropertyChanged("workoutday");
					this.OnworkoutdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sets", DbType="Int")]
		public System.Nullable<int> sets
		{
			get
			{
				return this._sets;
			}
			set
			{
				if ((this._sets != value))
				{
					this.OnsetsChanging(value);
					this.SendPropertyChanging();
					this._sets = value;
					this.SendPropertyChanged("sets");
					this.OnsetsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reps", DbType="Int")]
		public System.Nullable<int> reps
		{
			get
			{
				return this._reps;
			}
			set
			{
				if ((this._reps != value))
				{
					this.OnrepsChanging(value);
					this.SendPropertyChanging();
					this._reps = value;
					this.SendPropertyChanged("reps");
					this.OnrepsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="workout_workoutplandetail", Storage="_workout", ThisKey="workoutid", OtherKey="workoutid", IsForeignKey=true)]
		public workout workout
		{
			get
			{
				return this._workout.Entity;
			}
			set
			{
				workout previousValue = this._workout.Entity;
				if (((previousValue != value) 
							|| (this._workout.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._workout.Entity = null;
						previousValue.workoutplandetails.Remove(this);
					}
					this._workout.Entity = value;
					if ((value != null))
					{
						value.workoutplandetails.Add(this);
						this._workoutid = value.workoutid;
					}
					else
					{
						this._workoutid = default(int);
					}
					this.SendPropertyChanged("workout");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="workoutplan_workoutplandetail", Storage="_workoutplan", ThisKey="planid", OtherKey="planid", IsForeignKey=true)]
		public workoutplan workoutplan
		{
			get
			{
				return this._workoutplan.Entity;
			}
			set
			{
				workoutplan previousValue = this._workoutplan.Entity;
				if (((previousValue != value) 
							|| (this._workoutplan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._workoutplan.Entity = null;
						previousValue.workoutplandetails.Remove(this);
					}
					this._workoutplan.Entity = value;
					if ((value != null))
					{
						value.workoutplandetails.Add(this);
						this._planid = value.planid;
					}
					else
					{
						this._planid = default(int);
					}
					this.SendPropertyChanged("workoutplan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.workoutplans")]
	public partial class workoutplan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _planid;
		
		private System.Nullable<int> _userid;
		
		private string _planname;
		
		private System.Nullable<System.DateTime> _createdat;
		
		private System.Nullable<System.DateTime> _startdate;
		
		private System.Nullable<int> _duration;
		
		private string _goal;
		
		private string _notes;
		
		private decimal _price;
		
		private EntitySet<workoutplandetail> _workoutplandetails;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnplanidChanging(int value);
    partial void OnplanidChanged();
    partial void OnuseridChanging(System.Nullable<int> value);
    partial void OnuseridChanged();
    partial void OnplannameChanging(string value);
    partial void OnplannameChanged();
    partial void OncreatedatChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedatChanged();
    partial void OnstartdateChanging(System.Nullable<System.DateTime> value);
    partial void OnstartdateChanged();
    partial void OndurationChanging(System.Nullable<int> value);
    partial void OndurationChanged();
    partial void OngoalChanging(string value);
    partial void OngoalChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    #endregion
		
		public workoutplan()
		{
			this._workoutplandetails = new EntitySet<workoutplandetail>(new Action<workoutplandetail>(this.attach_workoutplandetails), new Action<workoutplandetail>(this.detach_workoutplandetails));
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_planid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int planid
		{
			get
			{
				return this._planid;
			}
			set
			{
				if ((this._planid != value))
				{
					this.OnplanidChanging(value);
					this.SendPropertyChanging();
					this._planid = value;
					this.SendPropertyChanged("planid");
					this.OnplanidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", DbType="Int")]
		public System.Nullable<int> userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_planname", DbType="NVarChar(255)")]
		public string planname
		{
			get
			{
				return this._planname;
			}
			set
			{
				if ((this._planname != value))
				{
					this.OnplannameChanging(value);
					this.SendPropertyChanging();
					this._planname = value;
					this.SendPropertyChanged("planname");
					this.OnplannameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdat", DbType="DateTime")]
		public System.Nullable<System.DateTime> createdat
		{
			get
			{
				return this._createdat;
			}
			set
			{
				if ((this._createdat != value))
				{
					this.OncreatedatChanging(value);
					this.SendPropertyChanging();
					this._createdat = value;
					this.SendPropertyChanged("createdat");
					this.OncreatedatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startdate", DbType="Date")]
		public System.Nullable<System.DateTime> startdate
		{
			get
			{
				return this._startdate;
			}
			set
			{
				if ((this._startdate != value))
				{
					this.OnstartdateChanging(value);
					this.SendPropertyChanging();
					this._startdate = value;
					this.SendPropertyChanged("startdate");
					this.OnstartdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duration", DbType="Int")]
		public System.Nullable<int> duration
		{
			get
			{
				return this._duration;
			}
			set
			{
				if ((this._duration != value))
				{
					this.OndurationChanging(value);
					this.SendPropertyChanging();
					this._duration = value;
					this.SendPropertyChanged("duration");
					this.OndurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goal", DbType="NVarChar(255)")]
		public string goal
		{
			get
			{
				return this._goal;
			}
			set
			{
				if ((this._goal != value))
				{
					this.OngoalChanging(value);
					this.SendPropertyChanging();
					this._goal = value;
					this.SendPropertyChanged("goal");
					this.OngoalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="NVarChar(MAX)")]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(18,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="workoutplan_workoutplandetail", Storage="_workoutplandetails", ThisKey="planid", OtherKey="planid")]
		public EntitySet<workoutplandetail> workoutplandetails
		{
			get
			{
				return this._workoutplandetails;
			}
			set
			{
				this._workoutplandetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_workoutplan", Storage="_user", ThisKey="userid", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.workoutplans.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.workoutplans.Add(this);
						this._userid = value.user_id;
					}
					else
					{
						this._userid = default(Nullable<int>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_workoutplandetails(workoutplandetail entity)
		{
			this.SendPropertyChanging();
			entity.workoutplan = this;
		}
		
		private void detach_workoutplandetails(workoutplandetail entity)
		{
			this.SendPropertyChanging();
			entity.workoutplan = null;
		}
	}
}
#pragma warning restore 1591
